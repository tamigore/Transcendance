// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  email       String   @unique
  username    String?  @unique
  hash        String   @unique
  hashRt    String?
  chatSocket  String?
  gameSocket  String?
  loggedIn    Boolean   @default(false)
  bio         String?
  img         String? //Path to img src
  admin       Room[]    @relation(name: "admin")
  rooms       Room[]    @relation(name: "users")
  messages    Message[]
  win         GameHistoric[] @relation(name: "winner")
  loose       GameHistoric[] @relation(name: "looser")
  @@map("users")
}

model GameHistoric {
  id          Int      @id @default(autoincrement())
  created_at  DateTime @default(now())

  winnerID    Int
  winner      User     @relation(name: "winner", fields: [winnerID], references: [id])
  looserID    Int
  looser      User     @relation(name: "looser", fields: [looserID], references: [id])
  score       String
  @@map("gamesHistoric")
}

model Message {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())

  text      String
  roomId    Int
  room      Room     @relation(fields: [roomId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  @@map("Messages")
}

model Room {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())

  name        String
  adminId     Int
  admin       User     @relation(name: "admin", fields: [adminId], references: [id])
  users       User[]   @relation(name: "users")
  messages    Message[]
  description String?
  @@map("Rooms")
}
