// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  relationMode = "foreignKeys"
}

model User {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  email         String   @unique
  username      String?  @unique
  description   String?
  hash          String?
  hashedRt      String?
  chatSocket    String?
  gameSocket    String?
  loggedIn      Boolean   @default(false)
  avatar        String?
  role          Role?     @default(USER)
  profile       Profile?
  creator       Room[]    @relation("creator")
  room          Room[]    @relation("usersInRoom")
  messages      Message[]
  @@map("Users")
}

model Room {
  id          Int       @id @default(autoincrement())
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  name        String    @unique
  description String?
  creatorId   Int?
  creator     User?   @relation("creator", fields: [creatorId], references: [id])
  users       User[]  @relation("usersInRoom")
  messages    Message[]
  @@map("Rooms")
}

model Profile {
  id      Int     @default(autoincrement()) @id
  bio     String?
  ranking Int     @default(autoincrement())
  win     Int     @default(0)
  lose    Int     @default(0)
  user    User    @relation(fields: [userId], references: [id])
  userId  Int     @unique
  @@map("Profiles")
}

model Message {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())

  username  String
  object    String?
  text      String
  room      Room    @relation(fields: [roomId], references: [id])
  roomId    Int     @unique
  user      User    @relation(fields: [userId], references: [id])
  userId    Int     @unique
  @@map("Messages")
}

enum Role {
  USER
  ADMIN
}

enum Invite {
  SPEC
  PLAY
  FREND
}
